/**
 * 日期转为过去时间中文表示
 * @author wilderliu@163.com
 * @desc 日期转为过去时间中文表示
 */
(function(global, factory) {
    if (typeof module === 'object' && typeof module.exports === 'object') {
        module.exports = factory(global);
    } else {
        factory(global);
    }
})(typeof window !== 'undefined' ? window : this, function(window) {

    // 上周表达，从1开始的日期
    var weekArr = ['', '一', '二', '三', '四', '五', '六', '日']

    /**
     * 个位补零
     * @param num 需要补0的数字
     * @return {string|*} 补零后的字符串
     */
    var pad = function(num) {
        return num < 10 ? '0' + num : num
    }

    var diffSeconds = function(timestamp1, timestamp2) {
        var offsettime = Math.abs(timestamp1 - timestamp2)
        // 间隔秒数
        offsettime = Math.floor(offsettime / 1000)

        return offsettime
    }

    /**
     * 计算两个时间之间的天数
     * @param timestamp1 第一个时间
     * @param timestamp2 第二个时间
     * @return {number} 天数
     */
    var diffDays = function(timestamp1, timestamp2) {
        var date1 = new Date(timestamp1),
            date2 = new Date(timestamp2)

        date1.setHours(0)
        date1.setMinutes(0)
        date1.setSeconds(0)
        date1.setMilliseconds(0)
        date2.setHours(0)
        date2.setMinutes(0)
        date2.setSeconds(0)
        date2.setMilliseconds(0)

        return Math.abs((date2 - date1) / 1000 / (3600 * 24))
    }

    /**
     * 将date转换为json
     * @param d 日期
     * @varructor json数据
     */
    var JsonDate = function(d) {
        var year = d.getFullYear(),
            month = d.getMonth() + 1,
            day = d.getDate(),
            hour = d.getHours(),
            hour12 = d.getHours(),
            minute = d.getMinutes(),
            second = d.getSeconds(),
            week = d.getDay() === 0 ? 7 : d.getDay(),
            a = '上午'

        if (hour - 12 > 0) {
            hour12 = hour - 12
        }

        if (hour >= 0 && hour < 6) {
            a = '凌晨'
        } else if (hour >= 6 && hour < 9) {
            a = '早上'
        } else if (hour >= 9 && hour < 12) {
            a = '上午'
        } else if (hour == 12) {
            a = '中午'
        } else if (hour > 12 && hour < 18) {
            a = '下午'
        } else {
            a = '晚上'
        }

        var json = {
            year, month, day, hour, minute, second, week, a, hour12,
        }
        return json
    }

    /**
     * 过去时间表达
     * @param timestamp 日期或时间戳
     * @param options  {format:'长日期的表达式', awaysShort:是否一直显示短日期，比如昨天11:20}
     * @return {string}时间中文表达
     */
    var pastTime = function(timestamp, options) {
        if (typeof op)
            if (!options) {
                options = {
                    format: 'YYYY/MM/DD hh:mm',
                    awaysShort: true,
                }
            } else

                timestamp = new Date(timestamp).getTime()
        // 当前时间戳
        var currentTimeStamp = Date.now(),
            // console.log('现在时间', new Date(currentTimeStamp).toLocaleString())
            // 当前时间
            c = JsonDate(new Date()),
            // 需要转义的日期
            d = JsonDate(new Date(timestamp))

        // 定义转换值
        var YYYY = d.year,
            MM = pad(d.month),
            DD = pad(d.day),
            hh = pad(d.hour),
            mm = pad(d.minute),
            ss = pad(d.second),

            D = d.day,
            M = d.month,
            h = d.hour,
            m = d.minute,
            s = d.second,
            a = d.a

        // 定义遍历值
        var result = {
            YYYY, MM, DD, hh, mm, ss, D, M, h, m, s, a,
        }

        var format = options.format
        // 赋值格式字符串
        for (var key in result) {
            format = format.replace(key, result[key])
        }

        // 最终结果
        var text = format

        // 对于不显示短时间的就直接显示
        if (!options.awaysShort) {
            return text
        }

        // 时分表达  12:20
        var hourMinute = `${hh}:${mm}`

        // 间隔时间戳
        var offsettime = diffSeconds(currentTimeStamp, timestamp)

        // 间隔天数
        var offsetdays = diffDays(timestamp, currentTimeStamp)

        // 当前时间以前的时间表达
        if (timestamp <= currentTimeStamp) {

            // 一天内
            if (offsettime == 0) {
                text = '现在' + ' ' + hourMinute
            } else if (offsettime <= 60) {
                // 秒
                text = offsettime + '秒钟前'
            } else if (offsettime <= 3600) {
                // 分钟
                offsettime = Math.floor(offsettime / 60)
                text = offsettime + '分钟前'
            } else if (offsettime <= 3600 * 24) {
                offsettime = Math.floor(offsettime / 3600)
                text = offsettime + '小时前'
            }

            if (offsetdays >= c.week && offsetdays <= c.week + 6) {
                text = '上周' + weekArr[d.week] + ' ' + hourMinute
            }

            // 昨天，前天，大前天逻辑

            if (offsetdays == 1) {
                text = '昨天' + ' ' + hourMinute
            } else if (offsetdays == 2) {
                text = '前天' + ' ' + hourMinute
            } else if (offsetdays == 3) {
                text = '大前天' + ' ' + hourMinute
            }
        } else {

            if (offsetdays > 7 - c.week && offsetdays <= 14 - c.week) {
                text = '下周' + weekArr[d.week] + ' ' + hourMinute
            }

            if (offsetdays == 0) {
                // 多出几秒钟或几小时，offsetdays就是0
                text = '今天' + ' ' + hourMinute
            } else if (offsetdays == 1) {
                text = '明天' + ' ' + hourMinute
            } else if (offsetdays == 2) {
                text = '后天' + ' ' + hourMinute
            } else if (offsetdays == 3) {
                text = '大后天' + ' ' + hourMinute
            }
        }
        return text
    }

    return pastTime
});


